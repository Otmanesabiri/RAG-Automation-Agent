name: Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy pylint

    - name: Run Black (Code Formatter Check)
      run: |
        black --check --diff src/ tests/
      continue-on-error: false

    - name: Run isort (Import Sorting Check)
      run: |
        isort --check-only --diff src/ tests/
      continue-on-error: false

    - name: Run flake8 (Style Guide Enforcement)
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run mypy (Static Type Checking)
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true

    - name: Run pylint (Code Quality)
      run: |
        pylint src/ --disable=C0111,R0903,C0103 --max-line-length=127
      continue-on-error: true

    - name: Generate lint report
      if: always()
      run: |
        echo "## Lint Results 🔍" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Code linting completed for Python ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
